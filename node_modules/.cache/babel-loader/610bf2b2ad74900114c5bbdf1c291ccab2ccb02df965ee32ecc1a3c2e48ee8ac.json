{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { authService } from \"@/services/auth.service\";\naxios.defaults.baseURL = 'http://localhost:8080/backofficeapi/';\naxios.interceptors.request.use(config => {\n  config.headers[\"X-Auth-Token\"] = authService.getAuthToken();\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  const {\n    headers,\n    data\n  } = response;\n  console.log('lalalala');\n  if (headers[\"x-meta-count\"]) {\n    return {\n      data: data.data,\n      count: Number(headers[\"x-meta-count\"])\n    };\n  }\n  if (data.code !== 0) {\n    return Promise.reject(data.message);\n  }\n  return data;\n}, async error => {\n  if (error.response && error.response.status === 401\n  // error.response.config &&\n  // !error.response.config.__isRetryRequest\n  ) {\n    console.log('test1233');\n    await axios.post('logout');\n    authService.removeAuthToken();\n    this.$router.push('/');\n    throw new Error(error);\n  }\n  console.log(error);\n  return Promise.reject(error.message);\n});","map":{"version":3,"names":["axios","authService","defaults","baseURL","interceptors","request","use","config","headers","getAuthToken","error","Promise","reject","response","data","console","log","count","Number","code","message","status","post","removeAuthToken","$router","push","Error"],"sources":["/Users/vitalij/PhpstormProjects/studyFront/src/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport {authService} from \"@/services/auth.service\";\n\naxios.defaults.baseURL = 'http://localhost:8080/backofficeapi/';\naxios.interceptors.request.use(\n    (config) => {\n        config.headers[\"X-Auth-Token\"] = authService.getAuthToken();\n\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\naxios.interceptors.response.use(\n    (response) => {\n        const { headers, data } = response;\nconsole.log('lalalala');\n        if (headers[\"x-meta-count\"]) {\n            return {\n                data: data.data,\n                count: Number(headers[\"x-meta-count\"]),\n            };\n        }\n\n        if (data.code !== 0) {\n            return Promise.reject(data.message);\n        }\n\n        return data;\n    },\n    async (error) => {\n        if (\n            error.response &&\n            error.response.status === 401\n            // error.response.config &&\n            // !error.response.config.__isRetryRequest\n        ) {\n            console.log('test1233');\n            await axios.post('logout');\n            authService.removeAuthToken();\n            this.$router.push('/');\n\n            throw new Error(error);\n        }\nconsole.log(error);\n        return Promise.reject(error.message);\n    }\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,yBAAyB;AAEnDD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,sCAAsC;AAC/DH,KAAK,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACRA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAGP,WAAW,CAACQ,YAAY,CAAC,CAAC;EAE3D,OAAOF,MAAM;AACjB,CAAC,EACAG,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AACDV,KAAK,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAK;EACV,MAAM;IAAEL,OAAO;IAAEM;EAAK,CAAC,GAAGD,QAAQ;EAC1CE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACf,IAAIR,OAAO,CAAC,cAAc,CAAC,EAAE;IACzB,OAAO;MACHM,IAAI,EAAEA,IAAI,CAACA,IAAI;MACfG,KAAK,EAAEC,MAAM,CAACV,OAAO,CAAC,cAAc,CAAC;IACzC,CAAC;EACL;EAEA,IAAIM,IAAI,CAACK,IAAI,KAAK,CAAC,EAAE;IACjB,OAAOR,OAAO,CAACC,MAAM,CAACE,IAAI,CAACM,OAAO,CAAC;EACvC;EAEA,OAAON,IAAI;AACf,CAAC,EACD,MAAOJ,KAAK,IAAK;EACb,IACIA,KAAK,CAACG,QAAQ,IACdH,KAAK,CAACG,QAAQ,CAACQ,MAAM,KAAK;EAC1B;EACA;EAAA,EACF;IACEN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,MAAMhB,KAAK,CAACsB,IAAI,CAAC,QAAQ,CAAC;IAC1BrB,WAAW,CAACsB,eAAe,CAAC,CAAC;IAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IAEtB,MAAM,IAAIC,KAAK,CAAChB,KAAK,CAAC;EAC1B;EACRK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACU,OAAO,CAAC;AACxC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}